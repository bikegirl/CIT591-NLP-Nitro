Simple PPDBConfidence_in_paraphrase | simplification_score | complex phrase | simple phrase(0) Simply substitute words with highest ppdb confidence score(1) Run something with highest PPDB score + complexity:	(a) \alpha * PPDB_score + (1- \alpha) * length	(b) alpha * PPDB_score + (1- \alpha) *regression_predicted score (using linear regression)	(c) Maybe use word2vec to get 300 word embeddingsClasses? GUI? FileReader? FileWriter? Document? NLTK/Spacy? Sentence ? PPDB? PartOfSpeechIdentifier? StopWordsfunc(word) - get part of speech, ignore stop words, have pScoreCalculator(word, partOfSpeech) —> look word up func( ? ScoreCalculator? WordSubstitutorBecca —>	Read files in from NLTK, grab part of speechTrevor —>	Implement “ScoreCalculator”/“WordSubstitutor” that takes in a word/part of speech and computes the score, then substitutes. 